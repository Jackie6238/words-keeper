<%- include('./partials/header.ejs') -%>

<h1>About Words Keeper</h1>

<p>
  Words Keeper is a personal project that I built at the end of my first coop term
  when I was working as an IT Support Assistant. It serves as a showcase for what I
  learned from Angela's "The Complete 2023 Web Development Bootcamp" during my free time.
</p>

<p>
  Words Keeper is a simple web application that allows users to keep track of new words they encounter along with their definitions. It serves as a personal vocabulary manager, helping users expand their language skills.
</p>

<h2>Features</h2>
<ul>
  <li>Add Words: Users can easily add new words they come across, along with the corresponding definitions, by using the "Add" feature. The new word will be saved to their collection.</li>
  <li>Edit Words: Words Keeper allows users to edit existing words in their collection. They can update the spelling or definition of a word whenever needed.</li>
  <li>Delete Words: If a word is no longer relevant or has been mastered, users can remove it from their collection using the "Delete" feature.</li>
</ul>

<h2>Technical Details</h2>
<p>
  Words Keeper is built using the following technologies and tools:
  <ul>
    <li>Node.js: The server-side runtime environment for running JavaScript code on the server.</li>
    <li>Express.js: A web application framework for Node.js that simplifies the process of building web applications and APIs.</li>
    <li>MongoDB: A NoSQL database used to store the words and their definitions in a structured format.</li>
    <li>Mongoose: A MongoDB object modeling tool used to create schemas and interact with the database.</li>
    <li>EJS: A templating engine for rendering dynamic content in the HTML files.</li>
    <li>Bootstrap: A CSS framework that provides pre-styled components and layouts for responsive web design.</li>
  </ul>
</p>

<p>
  The website is structured using the Model-View-Controller (MVC) pattern, where the model represents the data (e.g., words and their definitions), the view handles the presentation (HTML/EJS templates), and the controller manages the logic and interactions between the model and view (Express.js routes).
</p>

<p>
  Words Keeper is a full-stack web application that uses server-side rendering to generate dynamic HTML pages and allows users to interact with the website without needing to reload the page. With the user-friendly interface and essential vocabulary management features, Words Keeper aims to assist users in their language-learning journey.
</p>

<%-include('./partials/footer.ejs') -%>


